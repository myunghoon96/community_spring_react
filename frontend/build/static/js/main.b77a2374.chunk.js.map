{"version":3,"sources":["pages/community/MainFeaturedPost.js","pages/community/FeaturedPost.js","components/RankTable.js","utils/cookie.js","utils/silentRefresh.js","utils/customAxios.js","pages/community/Commnunity.js","components/BoardTable.js","pages/board/Board.js","components/MemberTable.js","pages/member/Member.js","components/LetterAvater.js","pages/member/Profile.js","states/LoginState.js","pages/auth/SignIn.js","pages/auth/SignUp.js","pages/community/Header.js","pages/board/Post.js","components/CommentTable.js","pages/board/PostDetail.js","pages/Error.js","pages/member/ProfileBoard.js","pages/member/ProfileComment.js","App.js","reportWebVitals.js","index.js"],"names":["MainFeaturedPost","props","post","Paper","sx","position","backgroundColor","color","mb","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","image","style","display","src","alt","imageText","Box","top","bottom","right","left","Grid","container","item","md","p","xs","pr","Typography","component","variant","gutterBottom","title","paragraph","description","Link","href","linkText","FeaturedPost","CardActionArea","Card","CardContent","flex","date","CardMedia","width","height","sm","imageLabel","RankTable","rows","i","length","push","value","score","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","TableBody","map","row","index","scope","cookies","Cookies","getCookie","name","get","removeCookie","remove","silentRefresh","config","accessToken","decode","jwt","nowDate","Date","getTime","exp","axios","headers","customAxios","create","timeout","baseURL","interceptors","request","use","response","error","status","window","location","Promise","reject","mainFeaturedPost","featuredPosts","theme","createTheme","Commnunity","useState","ranks","setRanks","useEffect","then","data","catch","console","log","ThemeProvider","CssBaseline","Container","maxWidth","spacing","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","id","label","EnhancedTableHead","onRequestSort","padding","headCell","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","BoardTable","React","setOrder","setOrderBy","selected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","max","size","numSelected","rowCount","slice","hover","role","tabIndex","to","substring","view","email","createdDate","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","Board","items","setItems","MemberTable","setSelected","onSelectAllClick","checked","newSelected","n","isItemSelected","indexOf","selectedIndex","concat","handleClick","Member","members","setMembers","stringToColor","string","hash","charCodeAt","toString","LetterAvatars","Avatar","bgcolor","children","split","Profile","marginTop","flexDirection","alignItems","Button","m","persistAtom","recoilPersist","LoginState","atom","key","default","effects_UNSTABLE","LoginUser","Copyright","getFullYear","SignIn","navigate","useNavigate","useRecoilState","setIsLogin","setLoginUser","errorMsg","setErrorMsg","onSubmit","preventDefault","FormData","currentTarget","memberDto","password","JSON","stringify","withCredentials","success","msg","noValidate","mt","TextField","margin","required","fullWidth","autoComplete","autoFocus","type","justifyContent","SignUp","Header","isLogin","loginUser","Toolbar","borderBottom","borderColor","ml","underline","document","replace","overflowX","url","section","noWrap","flexShrink","Post","itemDto","content","multiline","CommentTable","border","CommentPostTable","PostDetail","inputComment","setInputComment","postId","useParams","commentErrorMsg","setCommentErrorMsg","comments","setComments","getCommentList","modifiedDate","Divider","commentDto","onChange","e","Error","fontSize","ProfileBoard","ProfileComment","App","ProtectedRoute","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","CookiesProvider"],"mappings":"ihBAiFeA,MAzEf,SAA0BC,GACxB,IAAQC,EAASD,EAATC,KAER,OACE,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,WACVC,gBAAiB,WACjBC,MAAO,OACPC,GAAI,EACJC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,gBAAgB,OAAD,OAASV,EAAKW,MAAd,MATnB,UAaI,qBACEC,MAAO,CAAEC,QAAS,QAClBC,IAAKd,EAAKW,MACVI,IAAKf,EAAKgB,YAGd,cAACC,EAAA,EAAD,CACEf,GAAI,CACFC,SAAU,WACVe,IAAK,EACLC,OAAQ,EACRC,MAAO,EACPC,KAAM,EACNjB,gBAAiB,oBAGrB,cAACkB,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACR,EAAA,EAAD,CACEf,GAAI,CACFC,SAAU,WACVuB,EAAG,CAAEC,GAAI,EAAGF,GAAI,GAChBG,GAAI,CAAEH,GAAI,IAJd,UAOE,cAACI,EAAA,EAAD,CACEC,UAAU,KACVC,QAAQ,KACR1B,MAAM,UACN2B,cAAY,EAJd,SAMGhC,EAAKiC,QAER,cAACJ,EAAA,EAAD,CAAYE,QAAQ,KAAK1B,MAAM,UAAU6B,WAAS,EAAlD,SACGlC,EAAKmC,cAER,cAACC,EAAA,EAAD,CAAML,QAAQ,YAAYM,KAAK,IAA/B,SACGrC,EAAKsC,oBAOnB,E,oCCbcC,MA/Cf,SAAsBxC,GACpB,IAAQC,EAASD,EAATC,KAER,OACE,cAACsB,EAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAIF,GAAI,EAAvB,SACE,cAACe,EAAA,EAAD,CAAgBV,UAAU,IAAIO,KAAK,IAAnC,SACE,eAACI,EAAA,EAAD,CAAMvC,GAAI,CAAEW,QAAS,QAArB,UACE,eAAC6B,EAAA,EAAD,CAAaxC,GAAI,CAAEyC,KAAM,GAAzB,UACE,cAACd,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,SACG/B,EAAKiC,QAER,cAACJ,EAAA,EAAD,CAAYE,QAAQ,YAAY1B,MAAM,iBAAtC,SACGL,EAAK4C,OAER,cAACf,EAAA,EAAD,CAAYE,QAAQ,YAAYG,WAAS,EAAzC,SACGlC,EAAKmC,iBAMV,cAACU,EAAA,EAAD,CACEf,UAAU,MACV5B,GAAI,CACF4C,MAAO,IACPC,OAAQ,IACRlC,QAAS,CAAEc,GAAI,OAAQqB,GAAI,UAE7BrC,MAAOX,EAAKW,MACZI,IAAKf,EAAKiD,mBAMrB,E,+DClCc,SAASC,EAAUnD,GAGhC,IAFA,IAAMoD,EAAOpD,EAAMoD,KAEVC,EAAI,EAAGA,EAAI,EAAID,EAAKE,OAAQD,IACnCD,EAAKG,KAAK,CAAEC,MAAO,GAAIC,MAAO,KAGhC,OACE,cAAC,IAAD,CAAKtD,GAAI,CAAE4C,MAAO,QAAlB,SACE,cAAC7C,EAAA,EAAD,CAAOC,GAAI,CAAE4C,MAAO,OAAQxC,GAAI,GAAhC,SACE,cAACmD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOxD,GAAI,CAAEyD,SAAU,KAAO,aAAW,eAAzC,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,8CACA,cAACA,EAAA,EAAD,2BACA,cAACA,EAAA,EAAD,uCAGJ,cAACC,EAAA,EAAD,UACGZ,EAAKa,KAAI,SAACC,EAAKC,GAAN,OACR,eAACL,EAAA,EAAD,WAIE,cAACC,EAAA,EAAD,CAAWhC,UAAU,KAAKqC,MAAM,MAAhC,SACGD,EAAQ,IAEX,cAACJ,EAAA,EAAD,UAAYG,EAAIV,QAChB,cAACO,EAAA,EAAD,UAAYG,EAAIT,UAPXU,EAFC,cAkBvB,C,sDC9CKE,EAAU,I,OAAIC,GAMPC,EAAY,SAACC,GACxB,OAAOH,EAAQI,IAAID,EACpB,EAEYE,EAAe,SAACF,GAC3B,OAAOH,EAAQM,OAAOH,EACvB,E,SCVYI,EAAa,iDAAG,WAAOC,GAAP,0FACrBC,EAAcP,EAAU,gBADH,mBAInBQ,EAASC,SAAWF,GACpBG,GAAU,IAAIC,MAAOC,UAAY,MAEnCJ,GAAUA,EAAOK,IAAMH,GAPF,gCAQjBI,IAAMpF,KAAK,sBAAuB,GAAI,CAC1CqF,QAAS,CACP,eAAe,mBACf,eAAgBf,EAAU,eAC1B,gBAAiBA,EAAU,mBAZR,2CAAH,sDCCbgB,EAAcF,IAAMG,OAAO,CACtCC,QAAS,IACTC,QAAS,OACTJ,QAAS,CACP,eAAe,mBACf,eAAgBf,EAAU,kBAK9BgB,EAAYI,aAAaC,QAAQC,IAAIjB,EAAcC,WACnDU,EAAYI,aAAaG,SAASD,KAChC,SAAUC,GACR,OAAOA,CACR,GAHH,iDAIE,WAAgBC,GAAhB,kFAC0BA,EAAMlB,OACA,MAA1BkB,EAAMD,SAASE,QAA4C,MAA1BD,EAAMD,SAASE,SAClDC,OAAOC,SAAS5D,KAAO,UAH3B,kBAKS6D,QAAQC,OAAOL,IALxB,2CAJF,uDAYeR,QClBTc,EAAmB,CACvBnE,MAAO,iEACPE,YAAa,gBACbxB,MAAO,qCACPK,UAAW,0BAIPqF,EAAgB,CACpB,CACEpE,MAAO,SACPW,KAAM,UACNT,YAAa,qEACbxB,MAAO,qCACPsC,WAAY,cAgBd,CACEhB,MAAO,MACPW,KAAM,QACNT,YAAa,oCACbxB,MAAO,qCACPsC,WAAY,eAIVqD,EAAQC,cAEC,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KASA,OAPAC,qBAAU,WACRtB,EACGd,IAAI,eACJqC,MAAK,SAAChB,GAAD,OAAcc,EAASd,EAASiB,KAAKA,KAArC,IACLC,OAAM,SAACjB,GAAD,OAAWkB,QAAQC,IAAInB,EAAvB,GACV,GAAE,IAGD,eAACoB,EAAA,EAAD,CAAeZ,MAAOA,EAAtB,UACE,cAACa,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC,EAAD,CAAkBrH,KAAMoG,IACxB,cAAClD,EAAD,CAAWC,KAAMuD,IACjB,cAACpF,EAAA,EAAD,CAAMC,WAAS,EAAC+F,QAAS,EAAzB,SACGjB,EAAcrC,KAAI,SAAChE,GAAD,OACjB,cAAC,EAAD,CAA+BA,KAAMA,GAAlBA,EAAKiC,MADP,WAO5B,C,+BC5DD,SAASsF,GAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,CACR,CAED,SAASC,GAAcC,EAAOF,GAC5B,MAAiB,SAAVE,EACH,SAACJ,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,EAArC,EACA,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,EAAtC,CACL,CAED,SAASG,GAAWC,EAAOC,GACzB,IAAMC,EAAiBF,EAAM9D,KAAI,SAACiE,EAAI/D,GAAL,MAAe,CAAC+D,EAAI/D,EAApB,IAQjC,OAPA8D,EAAeE,MAAK,SAACV,EAAGC,GACtB,IAAMG,EAAQG,EAAWP,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVG,EACKA,EAEFJ,EAAE,GAAKC,EAAE,EACjB,IACMO,EAAehE,KAAI,SAACiE,GAAD,OAAQA,EAAG,EAAX,GAC3B,CAED,IAAME,GAAY,CAChB,CACEC,GAAI,QACJC,MAAO,gBAET,CACED,GAAI,OACJC,MAAO,uBAMT,CACED,GAAI,QACJC,MAAO,sBAET,CACED,GAAI,cACJC,MAAO,6BAQX,SAASC,GAAkBvI,GACzB,IAAQ6H,EAAkC7H,EAAlC6H,MAAOF,EAA2B3H,EAA3B2H,QAASa,EAAkBxI,EAAlBwI,cAKxB,OACE,cAAC3E,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW0E,QAAQ,aAClBL,GAAUnE,KAAI,SAACyE,GAAD,OACb,cAAC3E,EAAA,EAAD,CAEE4E,MAAOD,EAASE,QAAU,QAAU,OACpCH,QAASC,EAASG,eAAiB,OAAS,SAC5CC,cAAenB,IAAYe,EAASL,IAAKR,EAJ3C,SAME,eAACkB,EAAA,EAAD,CACEC,OAAQrB,IAAYe,EAASL,GAC7BY,UAAWtB,IAAYe,EAASL,GAAKR,EAAQ,MAC7CqB,SAlBeC,EAkBYT,EAASL,GAlBR,SAACe,GACvCZ,EAAcY,EAAOD,EACtB,GAaS,UAKGT,EAASJ,MACTX,IAAYe,EAASL,GACpB,cAACnH,EAAA,EAAD,CAAKa,UAAU,OAAO5B,GAAIkJ,IAA1B,SACa,SAAVxB,EAAmB,oBAAsB,qBAE1C,SAfDa,EAASL,IAVE,IAACc,CAQN,QAwBtB,CAUc,SAASG,GAAWtJ,GACjC,MAA0BuJ,WAAe,QAAzC,mBAAO1B,EAAP,KAAc2B,EAAd,KACA,EAA8BD,WAAe,gBAA7C,mBAAO5B,EAAP,KAAgB8B,EAAhB,KACA,EAAgCF,WAAe,IAA/C,mBAAOG,EAAP,KACA,GADA,KACwBH,WAAe,IAAvC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAA0BL,YAAe,GAAzC,mBAAOM,EAAP,KACA,GADA,KACsCN,WAAe,KAArD,mBAAOO,EAAP,KAAoBC,EAApB,KACM3G,EAAOpD,EAAMoD,KAkBb4G,EACJL,EAAO,EAAIM,KAAKC,IAAI,GAAI,EAAIP,GAAQG,EAAc1G,EAAKE,QAAU,EAEnE,OACE,cAACpC,EAAA,EAAD,CAAKf,GAAI,CAAE4C,MAAO,QAAlB,SACE,eAAC7C,EAAA,EAAD,CAAOC,GAAI,CAAE4C,MAAO,OAAQxC,GAAI,GAAhC,UACE,cAACmD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACExD,GAAI,CAAEyD,SAAU,KAChB,kBAAgB,aAChBuG,KAAMN,EAAQ,QAAU,SAH1B,UAKE,cAACtB,GAAD,CACE6B,YAAaV,EAASpG,OACtBuE,MAAOA,EACPF,QAASA,EACTa,cAhCc,SAACY,EAAOD,GAEhCK,EADc7B,IAAYwB,GAAsB,QAAVtB,EACrB,OAAS,OAC1B4B,EAAWN,EACZ,EA6BWkB,SAAUjH,EAAKE,SAEjB,eAACU,EAAA,EAAD,WACG8D,GAAW1E,EAAMwE,GAAcC,EAAOF,IACpC2C,MAAMX,EAAOG,EAAaH,EAAOG,EAAcA,GAC/C7F,KAAI,SAACC,EAAKC,GAEI,kCAA8BA,GAC3C,OACE,eAACL,EAAA,EAAD,CAAUyG,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACE,cAAC1G,EAAA,EAAD,CAAW0E,QAAQ,aACnB,cAAC1E,EAAA,EAAD,CAAWhC,UAAWM,IAAMqI,GAAI,eAAiBxG,EAAImE,GAArD,SACGnE,EAAIhC,MAAMyI,UAAU,EAAG,MAG1B,cAAC5G,EAAA,EAAD,UAAYG,EAAI0G,OAChB,cAAC7G,EAAA,EAAD,UAAYG,EAAI2G,QAChB,cAAC9G,EAAA,EAAD,UAAYG,EAAI4G,gBARiC5G,EAAImE,GAY1D,IACF2B,EAAY,GACX,cAAClG,EAAA,EAAD,CACEjD,MAAO,CACLmC,QAAS6G,EAAQ,GAAK,IAAMG,GAFhC,SAKE,cAACjG,EAAA,EAAD,CAAWgH,QAAS,cAM9B,cAACC,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BlJ,UAAU,MACVmJ,MAAO9H,EAAKE,OACZwG,YAAaA,EACbH,KAAMA,EACNwB,aAnEiB,SAAC/B,EAAOgC,GAC/BxB,EAAQwB,EACT,EAkEOC,oBAhEwB,SAACjC,GAC/BW,EAAeuB,SAASlC,EAAMmC,OAAO/H,MAAO,KAC5CoG,EAAQ,EACT,QAkEF,CCnMD,IAAMrD,GAAQC,cAsBCgF,OApBf,WACE,MAA0B9E,mBAAS,IAAnC,mBAAO+E,EAAP,KAAcC,EAAd,KASA,OAPA7E,qBAAU,WACRtB,EACGd,IAAI,UACJqC,MAAK,SAAChB,GAAD,OAAc4F,EAAS5F,EAASiB,KAAKA,KAArC,IACLC,OAAM,SAACjB,GAAD,OAAWkB,QAAQC,IAAInB,EAAvB,GACV,GAAE,IAGD,eAACoB,EAAA,EAAD,CAAeZ,MAAOA,GAAtB,UACE,cAACa,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACgC,GAAD,CAAYlG,KAAMqI,QAIzB,ECbD,SAASjE,GAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,CACR,CAED,SAASC,GAAcC,EAAOF,GAC5B,MAAiB,SAAVE,EACH,SAACJ,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,EAArC,EACA,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,EAAtC,CACL,CAED,SAASG,GAAWC,EAAOC,GACzB,IAAMC,EAAiBF,EAAM9D,KAAI,SAACiE,EAAI/D,GAAL,MAAe,CAAC+D,EAAI/D,EAApB,IAQjC,OAPA8D,EAAeE,MAAK,SAACV,EAAGC,GACtB,IAAMG,EAAQG,EAAWP,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVG,EACKA,EAEFJ,EAAE,GAAKC,EAAE,EACjB,IACMO,EAAehE,KAAI,SAACiE,GAAD,OAAQA,EAAG,EAAX,GAC3B,CAED,IAAME,GAAY,CAChB,CACEC,GAAI,QACJC,MAAO,uBAIX,SAASC,GAAkBvI,GACzB,IAAQ6H,EAAkC7H,EAAlC6H,MAAOF,EAA2B3H,EAA3B2H,QAASa,EAAkBxI,EAAlBwI,cAKxB,OACE,cAAC3E,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW0E,QAAQ,aAClBL,GAAUnE,KAAI,SAACyE,GAAD,OACb,cAAC3E,EAAA,EAAD,CAEE4E,MAAOD,EAASE,QAAU,QAAU,OACpCH,QAASC,EAASG,eAAiB,OAAS,SAC5CC,cAAenB,IAAYe,EAASL,IAAKR,EAJ3C,SAME,eAACkB,EAAA,EAAD,CACEC,OAAQrB,IAAYe,EAASL,GAC7BY,UAAWtB,IAAYe,EAASL,GAAKR,EAAQ,MAC7CqB,SAlBeC,EAkBYT,EAASL,GAlBR,SAACe,GACvCZ,EAAcY,EAAOD,EACtB,GAaS,UAKGT,EAASJ,MACTX,IAAYe,EAASL,GACpB,cAACnH,EAAA,EAAD,CAAKa,UAAU,OAAO5B,GAAIkJ,IAA1B,SACa,SAAVxB,EAAmB,oBAAsB,qBAE1C,SAfDa,EAASL,IAVE,IAACc,CAQN,QAwBtB,CAWc,SAASwC,GAAY3L,GAClC,MAA0BuJ,WAAe,OAAzC,mBAAO1B,EAAP,KAAc2B,EAAd,KACA,EAA8BD,WAAe,YAA7C,mBAAO5B,EAAP,KAAgB8B,EAAhB,KACA,EAAgCF,WAAe,IAA/C,mBAAOG,EAAP,KAAiBkC,EAAjB,KACA,EAAwBrC,WAAe,GAAvC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAA0BL,YAAe,GAAzC,mBAAOM,EAAP,KACA,GADA,KACsCN,WAAe,MAArD,mBAAOO,EAAP,KAAoBC,EAApB,KACM3G,EAAOpD,EAAMoD,KA+Cb4G,EACJL,EAAO,EAAIM,KAAKC,IAAI,GAAI,EAAIP,GAAQG,EAAc1G,EAAKE,QAAU,EAEnE,OACE,cAACpC,EAAA,EAAD,CAAKf,GAAI,CAAE4C,MAAO,QAAlB,SACE,eAAC7C,EAAA,EAAD,CAAOC,GAAI,CAAE4C,MAAO,OAAQxC,GAAI,GAAhC,UACE,cAACmD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACExD,GAAI,CAAEyD,SAAU,KAChB,kBAAgB,aAChBuG,KAAMN,EAAQ,QAAU,SAH1B,UAKE,cAAC,GAAD,CACEO,YAAaV,EAASpG,OACtBuE,MAAOA,EACPF,QAASA,EACTkE,iBAvDiB,SAACzC,GAC5B,GAAIA,EAAMmC,OAAOO,QAAjB,CACE,IAAMC,EAAc3I,EAAKa,KAAI,SAAC+H,GAAD,OAAOA,EAAExH,IAAT,IAC7BoH,EAAYG,EAEb,MACDH,EAAY,GACb,EAiDWpD,cA9Dc,SAACY,EAAOD,GAEhCK,EADc7B,IAAYwB,GAAsB,QAAVtB,EACrB,OAAS,OAC1B4B,EAAWN,EACZ,EA2DWkB,SAAUjH,EAAKE,SAEjB,eAACU,EAAA,EAAD,WACG8D,GAAW1E,EAAMwE,GAAcC,EAAOF,IACpC2C,MAAMX,EAAOG,EAAaH,EAAOG,EAAcA,GAC/C7F,KAAI,SAACC,EAAKC,GACT,IA3BIK,EA2BEyH,GA3BFzH,EA2B8BN,EAAIM,MA3BG,IAA5BkF,EAASwC,QAAQ1H,IA4BjB,kCAA8BL,GAC3C,OACE,eAACL,EAAA,EAAD,CACEyG,OAAK,EACLrB,QAAS,SAACE,GAAD,OA3DT,SAACA,EAAO5E,GAC1B,IAAM2H,EAAgBzC,EAASwC,QAAQ1H,GACnCuH,EAAc,IACK,IAAnBI,EACFJ,EAAcA,EAAYK,OAAO1C,EAAUlF,GAChB,IAAlB2H,EACTJ,EAAcA,EAAYK,OAAO1C,EAASY,MAAM,IACvC6B,IAAkBzC,EAASpG,OAAS,EAC7CyI,EAAcA,EAAYK,OAAO1C,EAASY,MAAM,GAAI,IAC3C6B,EAAgB,IACzBJ,EAAcA,EAAYK,OACxB1C,EAASY,MAAM,EAAG6B,GAClBzC,EAASY,MAAM6B,EAAgB,KAGnCP,EAAYG,EACb,CA2CuCM,CAAYjD,EAAOlF,EAAIM,KAAlC,EACTgG,KAAK,WACL,eAAcyB,EACdxB,UAAW,EAEXf,SAAUuC,EAPZ,UASE,cAAClI,EAAA,EAAD,CAAW0E,QAAQ,aAEnB,cAAC1E,EAAA,EAAD,UAAYG,EAAI2G,UALX3G,EAAImE,GAQd,IACF2B,EAAY,GACX,cAAClG,EAAA,EAAD,CACEjD,MAAO,CACLmC,QAAS6G,EAAQ,GAAK,IAAMG,GAFhC,SAKE,cAACjG,EAAA,EAAD,CAAWgH,QAAS,cAM9B,cAACC,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BlJ,UAAU,MACVmJ,MAAO9H,EAAKE,OACZwG,YAAaA,EACbH,KAAMA,EACNwB,aAxEiB,SAAC/B,EAAOgC,GAC/BxB,EAAQwB,EACT,EAuEOC,oBArEwB,SAACjC,GAC/BW,EAAeuB,SAASlC,EAAMmC,OAAO/H,MAAO,KAC5CoG,EAAQ,EACT,QAuEF,CC/MD,IAAMrD,GAAQC,cAsBC8F,OApBf,WACE,MAA8B5F,mBAAS,IAAvC,mBAAO6F,EAAP,KAAgBC,EAAhB,KASA,OAPA3F,qBAAU,WACRtB,EACGd,IAAI,WACJqC,MAAK,SAAChB,GAAD,OAAc0G,EAAW1G,EAASiB,KAAKA,KAAvC,IACLC,OAAM,SAACjB,GAAD,OAAWkB,QAAQC,IAAInB,EAAvB,GACV,GAAE,IAGD,eAACoB,EAAA,EAAD,CAAeZ,MAAOA,GAAtB,UACE,cAACa,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACqE,GAAD,CAAavI,KAAMmJ,QAI1B,E,UCxBD,SAASE,GAAcC,GACrB,IACIrJ,EADAsJ,EAAO,EAGX,IAAKtJ,EAAI,EAAGA,EAAIqJ,EAAOpJ,OAAQD,GAAK,EAClCsJ,EAAOD,EAAOE,WAAWvJ,KAAOsJ,GAAQ,GAAKA,GAG/C,IAAIrM,EAAQ,IACZ,IAAK+C,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEzB/C,GAAS,aADMqM,GAAa,EAAJtJ,EAAU,KACdwJ,SAAS,KAAMvC,OAAO,EAC3C,CAED,OAAOhK,CACR,CAcc,SAASwM,GAAc9M,GACpC,OAAO,cAAC+M,GAAA,EAAD,gBAbavI,EAaYxE,EAAM6K,MAbZ9H,EAamB/C,EAAM+C,MAblBC,EAayBhD,EAAMgD,OAZzD,CACL7C,GAAI,CACF6M,QAASP,GAAcjI,GAEvBzB,MAAOA,EACPC,OAAQA,GAEViK,SAAS,GAAD,OAAKzI,EAAK0I,MAAM,KAAK,GAAG,QARpC,IAAsB1I,EAAMzB,EAAOC,CAclC,C,cCzBKuD,GAAQC,cA6CC2G,OA3Cf,WACE,MAA0BzG,mBAAS,IAAnC,mBAAO+E,EAAP,KAAcC,EAAd,KASA,OAPA7E,qBAAU,WACRtB,EACGd,IAAI,mBACJqC,MAAK,SAAChB,GAAD,OAAc4F,EAAS5F,EAASiB,KAAKA,KAArC,IACLC,OAAM,SAACjB,GAAD,OAAWkB,QAAQC,IAAInB,EAAvB,GACV,GAAE,IAGD,eAACoB,EAAA,EAAD,CAAeZ,MAAOA,GAAtB,UACE,cAACa,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACpG,EAAA,EAAD,CACEf,GAAI,CACFiN,UAAW,EACXtM,QAAS,OACTuM,cAAe,SACfC,WAAY,UALhB,UAQG7B,EAAMZ,OAAS,cAACiC,GAAD,CAAejC,MAAOY,EAAMZ,QAC5C,sDAAUY,EAAMZ,SAChB,gDAASY,EAAMjB,QACf,cAAC+C,GAAA,EAAD,CACEjL,KAAK,gBACLN,QAAQ,WACRmI,KAAK,QACLhK,GAAI,CAAEqN,EAAG,GAJX,oDASA,cAACD,GAAA,EAAD,CAAQjL,KAAK,mBAAmBN,QAAQ,WAAWmI,KAAK,QAAxD,iEAOT,E,kDCjDOsD,GAAgBC,2BAAhBD,YAEKE,GAAaC,aAAK,CAC7BC,IAAK,aACLC,SAAS,EACTC,iBAAkB,CAACN,MAGRO,GAAYJ,aAAK,CAC5BC,IAAK,YACLC,QAAS,GACTC,iBAAkB,CAACN,MCGrB,SAASQ,GAAUjO,GACjB,OACE,eAAC8B,EAAA,EAAD,yBACEE,QAAQ,QACR1B,MAAM,iBACNqI,MAAM,UACF3I,GAJN,cAMG,kBACD,cAACqC,EAAA,EAAD,CAAM/B,MAAM,UAAUgC,KAAK,mBAA3B,0BAEQ,KACP,IAAI4C,MAAOgJ,cACX,OAGN,CAED,IAAM3H,GAAQC,cAEC,SAAS2H,KACtB,IAAMC,EAAWC,cACjB,EAA8BC,aAAeX,IAA7C,mBAAgBY,GAAhB,WACA,EAAkCD,aAAeN,IAAjD,mBAAkBQ,GAAlB,WACA,EAAgCjF,WAAe,MAA/C,mBAAOkF,EAAP,KAAiBC,EAAjB,KA4BA,OACE,cAACvH,EAAA,EAAD,CAAeZ,MAAOA,GAAtB,SACE,eAACc,EAAA,EAAD,CAAWtF,UAAU,OAAOuF,SAAS,KAArC,UACE,cAACF,EAAA,EAAD,IAEA,eAAClG,EAAA,EAAD,CACEf,GAAI,CACFiN,UAAW,EACXtM,QAAS,OACTuM,cAAe,SACfC,WAAY,UALhB,UAQE,cAACP,GAAA,EAAD,CAAQ5M,GAAI,CAAEqN,EAAG,EAAGR,QAAS,kBAA7B,SACE,cAAC,KAAD,MAEF,cAAClL,EAAA,EAAD,iCACA,cAACA,EAAA,EAAD,CAAYxB,MAAM,UAAlB,sCACA,cAACwB,EAAA,EAAD,CAAYxB,MAAM,UAAlB,qCACA,cAACwB,EAAA,EAAD,CAAYxB,MAAM,UAAlB,uCAEA,eAACY,EAAA,EAAD,CACEa,UAAU,OACV4M,SAjDW,SAACvF,GACpBA,EAAMwF,iBACN,IAAM7H,EAAO,IAAI8H,SAASzF,EAAM0F,eAE1BC,EAAY,CAChBlE,MAAO9D,EAAKtC,IAAI,SAChBuK,SAAUjI,EAAKtC,IAAI,aAErBc,EACGtF,KAAK,gBAAiBgP,KAAKC,UAAUH,GAAY,CAChDI,iBAAiB,IAElBrI,MAAK,SAAChB,GACLmB,QAAQC,IAAIpB,EAASiB,KAAKqI,UACI,IAA1BtJ,EAASiB,KAAKqI,SAChBnI,QAAQC,IAAI,OAEdqH,GAAW,GACXC,EAAazH,EAAKtC,IAAI,UACtB2J,EAAS,IACV,IACApH,OAAM,SAACjB,GACN2I,EAAY3I,EAAMD,SAASiB,KAAKhB,MAAMsJ,IACvC,GACJ,EA0BSC,YAAU,EACVnP,GAAI,CAAEoP,GAAI,GAJZ,UAME,cAACC,GAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTtH,GAAG,QACHC,MAAM,kCACN9D,KAAK,QACLoL,aAAa,QACbC,WAAS,IAEX,cAACL,GAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTnL,KAAK,WACL8D,MAAM,2BACNwH,KAAK,WACLzH,GAAG,WACHuH,aAAa,qBAEdnB,GAAY,oBAAI5N,MAAO,CAAEP,MAAO,OAApB,SAA8BmO,IAC3C,cAAClB,GAAA,EAAD,CACEuC,KAAK,SACLH,WAAS,EACT3N,QAAQ,YACR7B,GAAI,CAAEoP,GAAI,EAAGhP,GAAI,GAJnB,gCAQA,cAACgB,EAAA,EAAD,CAAMC,WAAS,EAACuO,eAAe,WAA/B,SACE,cAACxO,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACY,EAAA,EAAD,CAAMC,KAAK,UAAUN,QAAQ,QAA7B,SACG,uCAMX,cAACiM,GAAD,CAAW9N,GAAI,CAAEoP,GAAI,EAAGhP,GAAI,SAInC,CC3HD,SAAS0N,GAAUjO,GACjB,OACE,eAAC8B,EAAA,EAAD,yBACEE,QAAQ,QACR1B,MAAM,iBACNqI,MAAM,UACF3I,GAJN,cAMG,kBACD,cAACqC,EAAA,EAAD,CAAM/B,MAAM,UAAUgC,KAAK,mBAA3B,0BAEQ,KACP,IAAI4C,MAAOgJ,cACX,OAGN,CAED,IAAM3H,GAAQC,cAEC,SAASwJ,KACtB,IAAM5B,EAAWC,cACjB,EAAgC9E,WAAe,MAA/C,mBAAOkF,EAAP,KAAiBC,EAAjB,KAmBA,OACE,cAACvH,EAAA,EAAD,CAAeZ,MAAOA,GAAtB,SACE,eAACc,EAAA,EAAD,CAAWtF,UAAU,OAAOuF,SAAS,KAArC,UACE,cAACF,EAAA,EAAD,IACA,eAAClG,EAAA,EAAD,CACEf,GAAI,CACFiN,UAAW,EACXtM,QAAS,OACTuM,cAAe,SACfC,WAAY,UALhB,UAQE,cAACP,GAAA,EAAD,CAAQ5M,GAAI,CAAEqN,EAAG,EAAGR,QAAS,kBAA7B,SACE,cAAC,KAAD,MAEF,cAAClL,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,sCAGA,eAACd,EAAA,EAAD,CACEa,UAAU,OACVuN,YAAU,EACVX,SAvCW,SAACvF,GACpBA,EAAMwF,iBACN,IAAM7H,EAAO,IAAI8H,SAASzF,EAAM0F,eAC1BC,EAAY,CAChBlE,MAAO9D,EAAKtC,IAAI,SAChBuK,SAAUjI,EAAKtC,IAAI,aAGrBc,EACGtF,KAAK,iBAAkBgP,KAAKC,UAAUH,IACtCjI,MAAK,SAAChB,GACLsI,EAAS,IACV,IACApH,OAAM,SAACjB,GACN2I,EAAY3I,EAAMD,SAASiB,KAAKhB,MAAMsJ,IACvC,GACJ,EAwBSlP,GAAI,CAAEoP,GAAI,GAJZ,UAME,eAAChO,EAAA,EAAD,CAAMC,WAAS,EAAC+F,QAAS,EAAzB,UACE,cAAChG,EAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAf,SACE,cAAC4N,GAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTtH,GAAG,QACHC,MAAM,kCACN9D,KAAK,QACLoL,aAAa,YAGjB,cAACrO,EAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAf,SACE,cAAC4N,GAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTnL,KAAK,WACL8D,MAAM,2BACNwH,KAAK,WACLzH,GAAG,WACHuH,aAAa,sBAIlBnB,GAAY,oBAAI5N,MAAO,CAAEP,MAAO,OAApB,SAA8BmO,IAC3C,cAAClB,GAAA,EAAD,CACEuC,KAAK,SACLH,WAAS,EACT3N,QAAQ,YACR7B,GAAI,CAAEoP,GAAI,EAAGhP,GAAI,GAJnB,0BAQA,cAACgB,EAAA,EAAD,CAAMC,WAAS,EAACuO,eAAe,WAA/B,SACE,cAACxO,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACY,EAAA,EAAD,CAAMC,KAAK,UAAUN,QAAQ,QAA7B,0CAOR,cAAC,GAAD,CAAW7B,GAAI,CAAEoP,GAAI,SAI5B,C,wDCkBcU,OAjIf,SAAgBjQ,GACd,IAOA,EAA8BsO,aAAeX,IAA7C,mBAAOuC,EAAP,KAAgB3B,EAAhB,KACA,EAAkCD,aAAeN,IAAjD,mBAAOmC,EAAP,KAAkB3B,EAAlB,KAWA,OACE,eAAC,WAAD,WACE,eAAC4B,GAAA,EAAD,CACEjQ,GAAI,CACFkQ,aAAc,EACdC,YAAa,WAHjB,UAME,cAAC,KAAD,IACA,cAACjO,EAAA,EAAD,CAAMC,KAAK,iCAAiC6H,KAAK,QAAjD,oBAGA,cAAC,KAAD,CAAYhK,GAAI,CAAEoQ,GAAI,KACtB,cAAClO,EAAA,EAAD,CACEC,KAAK,wDACL6H,KAAK,QAFP,kBAMA,cAACrI,EAAA,EAAD,CACEC,UAAU,KACVC,QAAQ,KACR1B,MAAM,UACNqI,MAAM,SACNxI,GAAI,CAAEyC,KAAM,EAAG2N,GAAI,GACnBjO,KAAK,IANP,SAQE,cAACD,EAAA,EAAD,CAAMC,KAAK,IAAIkO,UAAU,SAAzB,SA9CM,WAmDPN,GACC,qCACE,cAACpD,GAAD,CAAejC,MAAOsF,IACtB,cAAC5C,GAAA,EAAD,CACErE,QA7CS,SAACE,GACpBA,EAAMwF,iBACNlK,EAAa,eACbA,EAAa,gBACb6J,GAAW,GACXC,EAAa,IACbiC,SAASvK,SAASwK,QAAQ,IAC3B,EAuCW1O,QAAQ,WACRmI,KAAK,QACLhK,GAAI,CAAEoQ,GAAI,GAJZ,sCAQA,cAAChD,GAAA,EAAD,CACEjL,KAAK,WACLN,QAAQ,WACRmI,KAAK,QACLhK,GAAI,CAAEoQ,GAAI,GAJZ,oCAUFL,GACA,qCACE,cAACnD,GAAA,EAAD,IACA,cAACQ,GAAA,EAAD,CACEjL,KAAK,UACLN,QAAQ,WACRmI,KAAK,QACLhK,GAAI,CAAEoQ,GAAI,GAJZ,gCAQA,cAAChD,GAAA,EAAD,CACEjL,KAAK,UACLN,QAAQ,WACRmI,KAAK,QACLhK,GAAI,CAAEoQ,GAAI,GAJZ,4CAWN,cAACH,GAAA,EAAD,CACErO,UAAU,MACVC,QAAQ,QACR7B,GAAI,CAAE4P,eAAgB,gBAAiBY,UAAW,QAHpD,SA7Fa,CACf,CAAEzO,MAAO,4BAAS0O,IAAK,WACvB,CAAE1O,MAAO,qBAAO0O,IAAK,UACrB,CAAE1O,MAAO,kCAAU0O,IAAK,gBA+FV3M,KAAI,SAAC4M,GAAD,OACZ,cAACxO,EAAA,EAAD,CACE/B,MAAM,UACNwQ,QAAM,EAEN9O,QAAQ,QACRM,KAAMuO,EAAQD,IACdzQ,GAAI,CAAEwB,EAAG,EAAGoP,WAAY,GAN1B,SAQGF,EAAQ3O,OALJ2O,EAAQ3O,MAJH,QAerB,E,qBCrHKqE,GAAQC,cAEC,SAASwK,KACtB,IAAM5C,EAAWC,cAEjB,EAAgC9E,WAAe,MAA/C,mBAAOkF,EAAP,KAAiBC,EAAjB,KAiBA,OACE,cAACvH,EAAA,EAAD,CAAeZ,MAAOA,GAAtB,SACE,eAACc,EAAA,EAAD,CAAWtF,UAAU,OAAOuF,SAAS,KAArC,UACE,cAACF,EAAA,EAAD,IACA,eAAClG,EAAA,EAAD,CACEf,GAAI,CACFiN,UAAW,EACXtM,QAAS,OACTuM,cAAe,SACfC,WAAY,UALhB,UAQE,cAACP,GAAA,EAAD,CAAQ5M,GAAI,CAAEqN,EAAG,GAAjB,SACE,cAAC,KAAD,MAGF,eAACtM,EAAA,EAAD,CACEa,UAAU,OACV4M,SAjCW,SAACvF,GACpBA,EAAMwF,iBACN,IAAM7H,EAAO,IAAI8H,SAASzF,EAAM0F,eAE1BmC,EAAU,CAAE/O,MAAO6E,EAAKtC,IAAI,SAAUyM,QAASnK,EAAKtC,IAAI,YAC9Dc,EACGtF,KAAK,SAAUgP,KAAKC,UAAU+B,IAC9BnK,MAAK,SAAChB,GACLsI,EAAS,eAAiBtI,EAASiB,KAAKA,KACzC,IACAC,OAAM,SAACjB,GACN2I,EAAY3I,EAAMD,SAASiB,KAAKhB,MAAMsJ,IACvC,GACJ,EAqBSC,YAAU,EACVnP,GAAI,CAAEoP,GAAI,GAJZ,UAME,cAACC,GAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTtH,GAAG,QACHC,MAAM,eACN9D,KAAK,QAELqL,WAAS,IAEX,cAACL,GAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTnL,KAAK,UACL8D,MAAM,eACNwH,KAAK,UACLzH,GAAG,UACH8I,WAAS,EACT/N,KAAM,KAIPqL,GAAY,oBAAI5N,MAAO,CAAEP,MAAO,OAApB,SAA8BmO,IAC3C,cAAClB,GAAA,EAAD,CACEuC,KAAK,SACLH,WAAS,EACT3N,QAAQ,YACR7B,GAAI,CAAEoP,GAAI,EAAGhP,GAAI,GAJnB,oCAaX,C,mCCnFM,SAAS6Q,GAAapR,GAC3B,IAAMoD,EAAOpD,EAAMoD,KAEnB,OACE,cAAC,IAAD,CAAKjD,GAAI,CAAE4C,MAAO,QAAlB,SACE,cAAC7C,EAAA,EAAD,CAAOC,GAAI,CAAE4C,MAAO,OAAQxC,GAAI,GAAhC,SACE,cAACmD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAOxD,GAAI,CAAEyD,SAAU,KAAO,aAAW,eAAzC,SACE,cAACI,EAAA,EAAD,UACGZ,EAAKa,KAAI,SAACC,GAAD,OACR,eAACJ,EAAA,EAAD,CAEE3D,GAAI,CAAE,mCAAoC,CAAEkR,OAAQ,IAFtD,UAIE,cAACtN,EAAA,EAAD,CAAWhC,UAAU,KAAKqC,MAAM,MAAhC,SACGF,EAAIgN,UAENhN,EAAG,QACF,cAACH,EAAA,EAAD,CAAW4E,MAAM,QAAjB,SAA0BzE,EAAG,OAAW2G,UAPrC3G,EAAImE,GAFH,aAmBvB,CAEM,SAASiJ,GAAiBtR,GAC/B,IAAMoD,EAAOpD,EAAMoD,KAEnB,OACE,cAAC,IAAD,CAAKjD,GAAI,CAAE4C,MAAO,QAAlB,SACE,cAAC7C,EAAA,EAAD,CAAOC,GAAI,CAAE4C,MAAO,OAAQxC,GAAI,GAAhC,SACE,cAACmD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOxD,GAAI,CAAEyD,SAAU,KAAO,aAAW,eAAzC,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2BACA,cAACA,EAAA,EAAD,CAAW4E,MAAM,QAAjB,qCAGJ,cAAC3E,EAAA,EAAD,UACGZ,EAAKa,KAAI,SAACC,GAAD,OACR,eAACJ,EAAA,EAAD,CAEE3D,GAAI,CAAE,mCAAoC,CAAEkR,OAAQ,IAFtD,UAIE,cAACtN,EAAA,EAAD,CAAWhC,UAAU,KAAKqC,MAAM,MAAhC,SACGF,EAAIgN,UAENhN,EAAG,OACF,cAACH,EAAA,EAAD,CACE4E,MAAM,QACN5G,UAAU,IACVO,KAAM,eAAiB4B,EAAG,MAAUmE,GAHtC,SAKGnE,EAAG,MAAUhC,UAZbgC,EAAImE,GAFH,cAyBvB,CClED,IAAM9B,GAAQC,cAEC,SAAS+K,KACtB,MAA0B7K,mBAAS,IAAnC,mBAAO+E,EAAP,KAAcC,EAAd,KACA,EAAwChF,mBAAS,IAAjD,mBAAO8K,EAAP,KAAqBC,EAArB,KACQC,EAAWC,cAAXD,OAER,EAAgCnI,IAAM7C,SAAS,MAA/C,mBAAO+H,EAAP,KAAiBC,EAAjB,KACA,EAA8CnF,IAAM7C,SAAS,MAA7D,mBAAOkL,EAAP,KAAwBC,EAAxB,KACA,EAAgCnL,mBAAS,IAAzC,mBAAOoL,EAAP,KAAiBC,EAAjB,KAEAlL,qBAAU,WACRtB,EACGd,IAAI,UAAYiN,GAChB5K,MAAK,SAAChB,GACL4F,EAAS5F,EAASiB,KAAKA,MACvBiL,GACD,IACAhL,OAAM,SAACjB,GACN2I,EAAY3I,EAAMD,SAASiB,KAAKhB,MAAMsJ,IACvC,GACJ,GAAE,IAEH,IAAM2C,EAAiB,WACrBzM,EACGd,IAAI,kBAAoBiN,GACxB5K,MAAK,SAAChB,GACLiM,EAAYjM,EAASiB,KAAKA,KAC3B,IACAC,OAAM,SAACjB,GACN8L,EAAmB9L,EAAMD,SAASiB,KAAKhB,MAAMsJ,IAC9C,GACJ,EAmBD,OACE,cAAClI,EAAA,EAAD,CAAeZ,MAAOA,GAAtB,SACE,eAACc,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACF,EAAA,EAAD,IACA,eAAClG,EAAA,EAAD,CACEf,GAAI,CACFiN,UAAW,EACXtM,QAAS,OACTuM,cAAe,SACfC,WAAY,UALhB,UAQE,cAACP,GAAA,EAAD,CAAQ5M,GAAI,CAAEqN,EAAG,GAAjB,SACE,cAAC,KAAD,MAGF,eAACtM,EAAA,EAAD,CAAKf,GAAI,CAAE4C,MAAO,QAAlB,UACG0I,GAASA,EAAMb,MAAQ,GACtB,cAAC4E,GAAA,EAAD,CAEErP,GAAI,CAAE4C,MAAO,OACb0M,OAAO,SACPpH,GAAG,OACHC,MAAM,qBACN9E,MAAOiI,EAAMb,MAAQ,IAGxBa,GAASA,EAAMZ,OACd,cAAC2E,GAAA,EAAD,CAEErP,GAAI,CAAE4C,MAAO,OACb0M,OAAO,SACPpH,GAAG,QACHC,MAAM,qBACN9E,MAAOiI,EAAMZ,OAAS,KAG1B,cAAC2E,GAAA,EAAD,CAEErP,GAAI,CAAE4C,MAAO,OACb0M,OAAO,SACPpH,GAAG,cACHC,MAAM,qBACN9E,MAAOiI,EAAMX,aAAe,KAE9B,cAAC0E,GAAA,EAAD,CAEErP,GAAI,CAAE4C,MAAO,OACb0M,OAAO,SACPpH,GAAG,eACHC,MAAM,qBACN9E,MAAOiI,EAAMwG,cAAgB,QAIjC,cAACzC,GAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTnL,KAAK,QACL8D,MAAM,eACNwH,KAAK,QACLzH,GAAG,QACH8I,WAAS,EACT3N,MAAOiI,EAAMvJ,OAAS,KAExB,cAACsN,GAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTnL,KAAK,UACL8D,MAAM,eACNwH,KAAK,UACLzH,GAAG,UACH8I,WAAS,EACT/N,KAAM,GACNI,MAAOiI,EAAMyF,SAAW,KAEzBzC,GAAY,oBAAI5N,MAAO,CAAEP,MAAO,OAApB,SAA8BmO,IAE3C,cAACyD,GAAA,EAAD,IACA,eAAChR,EAAA,EAAD,CACEa,UAAU,OACV4M,SApGkB,SAACvF,GAC3BA,EAAMwF,iBACN,IACMuD,EAAa,CAAEjB,QADR,IAAIrC,SAASzF,EAAM0F,eACGrK,IAAI,YAEvCc,EACGtF,KAAK,kBAAoByR,EAAQzC,KAAKC,UAAUiD,IAChDrL,MAAK,SAAChB,GACLkM,IACAP,EAAgB,IAChBI,EAAmB,KACpB,IACA7K,OAAM,SAACjB,GACN8L,EAAmB9L,EAAMD,SAASiB,KAAKhB,MAAMsJ,IAC9C,GACJ,EAsFSC,YAAU,EACVnP,GAAI,CAAEoP,GAAI,EAAGxM,MAAO,QAJtB,UAME,cAACyM,GAAA,EAAD,CACErP,GAAI,CAAE4C,MAAO,OACb0M,OAAO,SACPpH,GAAG,UACHC,MAAM,sBACN9D,KAAK,UACLhB,MAAOgO,EACPY,SAAU,SAACC,GACTZ,EAAgBY,EAAE9G,OAAO/H,MAC1B,IAEH,cAAC+J,GAAA,EAAD,CACEuC,KAAK,SAEL9N,QAAQ,YACR7B,GAAI,CAAEoP,GAAI,EAAGhP,GAAI,EAAGwC,MAAO,OAJ7B,uCAQC6O,GACC,oBAAI/Q,MAAO,CAAEP,MAAO,OAApB,SAA8BsR,OAGlC,cAACR,GAAD,CAAchO,KAAM0O,WAK7B,C,yBC1KKvL,GAAQC,cAiCC8L,OA/Bf,WACE,MAA8BhE,aAAeX,IAA7C,mBAAgBY,GAAhB,WACA,EAAkCD,aAAeN,IAAjD,mBAAkBQ,GAAlB,WAMA,OALA9J,EAAa,eACbA,EAAa,gBACb6J,GAAW,GACXC,EAAa,IAGX,eAACrH,EAAA,EAAD,CAAeZ,MAAOA,GAAtB,UACE,cAACa,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACpG,EAAA,EAAD,CACEf,GAAI,CACFiN,UAAW,EACXtM,QAAS,OACTuM,cAAe,SACfC,WAAY,UALhB,UAQE,cAAC,KAAD,CAAkBhN,MAAM,UAAUH,GAAI,CAAEoS,SAAU,OAElD,iEACA,sHACA,8GAKT,EChCKhM,GAAQC,cAuBCgM,OArBf,WACE,MAA0B9L,mBAAS,IAAnC,mBAAO+E,EAAP,KAAcC,EAAd,KACA,EAAkC4C,aAAeN,IAAjD,mBASA,OATA,UAEAnH,qBAAU,WACRtB,EACGd,IAAI,kBACJqC,MAAK,SAAChB,GAAD,OAAc4F,EAAS5F,EAASiB,KAAKA,KAArC,IACLC,OAAM,SAACjB,GAAD,OAAWkB,QAAQC,IAAInB,EAAvB,GACV,GAAE,IAGD,eAACoB,EAAA,EAAD,CAAeZ,MAAOA,GAAtB,UACE,cAACa,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACgC,GAAD,CAAYlG,KAAMqI,QAIzB,ECtBKlF,GAAQC,cAwBCiM,OAtBf,WACE,MAA0B/L,mBAAS,IAAnC,mBAAO+E,EAAP,KAAcC,EAAd,KAWA,OATA7E,qBAAU,WACRtB,EACGd,IAAI,mBAAoB,CACvBa,QAAS,CAAE,eAAe,GAAf,OAAmBf,EAAU,mBAEzCuC,MAAK,SAAChB,GAAD,OAAc4F,EAAS5F,EAASiB,KAAKA,KAArC,IACLC,OAAM,SAACjB,GAAD,OAAWkB,QAAQC,IAAInB,EAAvB,GACV,GAAE,IAGD,eAACoB,EAAA,EAAD,CAAeZ,MAAOA,GAAtB,UACE,cAACa,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACgK,GAAD,CAAkBlO,KAAMqI,QAI/B,EC+DciH,OA1Ef,WACE,MAA8BpE,aAAeX,IAA7C,mBAAOuC,EAAP,KACMyC,GADN,KACuB,SAAC,GAAkB,IAAhB1F,EAAe,EAAfA,SACxB,OAAKiD,EAGEjD,EAFE,cAAC,IAAD,CAAUvC,GAAG,UAAUgG,SAAO,GAGxC,GAED,OACE,eAACrJ,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC,GAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsL,KAAK,IAAIC,QAAS,cAACpM,EAAD,MACzB,cAAC,IAAD,CAAOmM,KAAK,UAAUC,QAAS,cAAC,GAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC7C,GAAD,MAC/B,cAAC,IAAD,CAAO4C,KAAK,UAAUC,QAAS,cAAC1E,GAAD,MAC/B,cAAC,IAAD,CAAOyE,KAAK,SAASC,QAAS,cAAC,GAAD,MAE9B,cAAC,IAAD,CACED,KAAK,SACLC,QACE,cAACF,EAAD,UACE,cAAC,GAAD,QAIN,cAAC,IAAD,CACEC,KAAK,cACLC,QACE,cAACF,EAAD,UACE,cAAC3B,GAAD,QAIN,cAAC,IAAD,CACE4B,KAAK,sBACLC,QACE,cAACF,EAAD,UACE,cAACpB,GAAD,QAIN,cAAC,IAAD,CACEqB,KAAK,WACLC,QACE,cAACF,EAAD,UACE,cAAC,GAAD,QAIN,cAAC,IAAD,CACEC,KAAK,gBACLC,QACE,cAACF,EAAD,UACE,cAAC,GAAD,QAIN,cAAC,IAAD,CACEC,KAAK,mBACLC,QACE,cAACF,EAAD,UACE,cAAC,GAAD,eAQf,EC/EcG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlM,MAAK,YAAkD,IAA/CmM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,E,UCFYO,IAASC,WAAW9C,SAAS+C,eAAe,SACpDC,OACH,cAAC,KAAD,UACE,cAACC,GAAA,EAAD,UACE,cAAC,GAAD,SAQNZ,I","file":"static/js/main.b77a2374.chunk.js","sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\n\nfunction MainFeaturedPost(props) {\n  const { post } = props;\n\n  return (\n    <Paper\n      sx={{\n        position: \"relative\",\n        backgroundColor: \"grey.800\",\n        color: \"#fff\",\n        mb: 4,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        backgroundImage: `url(${post.image})`,\n      }}\n    >\n      {\n        <img\n          style={{ display: \"none\" }}\n          src={post.image}\n          alt={post.imageText}\n        />\n      }\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          right: 0,\n          left: 0,\n          backgroundColor: \"rgba(0,0,0,.3)\",\n        }}\n      />\n      <Grid container>\n        <Grid item md={6}>\n          <Box\n            sx={{\n              position: \"relative\",\n              p: { xs: 3, md: 6 },\n              pr: { md: 0 },\n            }}\n          >\n            <Typography\n              component=\"h3\"\n              variant=\"h4\"\n              color=\"inherit\"\n              gutterBottom\n            >\n              {post.title}\n            </Typography>\n            <Typography variant=\"h6\" color=\"inherit\" paragraph>\n              {post.description}\n            </Typography>\n            <Link variant=\"subtitle1\" href=\"#\">\n              {post.linkText}\n            </Link>\n          </Box>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nMainFeaturedPost.propTypes = {\n  post: PropTypes.shape({\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    imageText: PropTypes.string.isRequired,\n    // linkText: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MainFeaturedPost;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\n\nfunction FeaturedPost(props) {\n  const { post } = props;\n\n  return (\n    <Grid item xs={12} md={6}>\n      <CardActionArea component=\"a\" href=\"#\">\n        <Card sx={{ display: \"flex\" }}>\n          <CardContent sx={{ flex: 1 }}>\n            <Typography component=\"h3\" variant=\"h5\">\n              {post.title}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\n              {post.date}\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph>\n              {post.description}\n            </Typography>\n            {/* <Typography variant=\"subtitle1\" color=\"primary\">\n              Continue reading...\n            </Typography> */}\n          </CardContent>\n          <CardMedia\n            component=\"img\"\n            sx={{\n              width: 160,\n              height: 160,\n              display: { xs: \"none\", sm: \"block\" },\n            }}\n            image={post.image}\n            alt={post.imageLabel}\n          />\n        </Card>\n      </CardActionArea>\n    </Grid>\n  );\n}\n\nFeaturedPost.propTypes = {\n  post: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    imageLabel: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default FeaturedPost;\n","import * as React from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nexport default function RankTable(props) {\r\n  const rows = props.rows;\r\n\r\n  for (let i = 0; i < 3 - rows.length; i++) {\r\n    rows.push({ value: \"\", score: \"\" });\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n        <TableContainer>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>게시글 랭킹</TableCell>\r\n                <TableCell>제목</TableCell>\r\n                <TableCell>조회 수</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => (\r\n                <TableRow\r\n                  key={index}\r\n                  // sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {index + 1}\r\n                  </TableCell>\r\n                  <TableCell>{row.value}</TableCell>\r\n                  <TableCell>{row.score}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import { Cookies } from \"react-cookie\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const setCookie = (name, value, option) => {\r\n  return cookies.set(name, value, { ...option });\r\n};\r\n\r\nexport const getCookie = (name) => {\r\n  return cookies.get(name);\r\n};\r\n\r\nexport const removeCookie = (name) => {\r\n  return cookies.remove(name);\r\n};\r\n","import axios from \"axios\";\r\nimport { getCookie } from \"./cookie\";\r\nimport * as jwt from \"jsonwebtoken\";\r\n\r\nexport const silentRefresh = async (config) => {\r\n  const accessToken = getCookie(\"accessToken\");\r\n\r\n  if (accessToken) {\r\n    const decode = jwt.decode(accessToken);\r\n    const nowDate = new Date().getTime() / 1000;\r\n\r\n    if (decode && decode.exp < nowDate) {\r\n      await axios.post(\"/api/member/refresh\", \"\", {\r\n        headers: {\r\n          \"Content-Type\": `application/json`,\r\n          \"X-AUTH-TOKEN\": getCookie(\"accessToken\"),\r\n          \"REFRESH-TOKEN\": getCookie(\"refreshToken\"),\r\n        },\r\n      });\r\n    }\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { config } from \"process\";\r\nimport { getCookie } from \"./cookie\";\r\nimport { silentRefresh } from \"./silentRefresh\";\r\n\r\nexport const customAxios = axios.create({\r\n  timeout: 10000,\r\n  baseURL: \"/api\",\r\n  headers: {\r\n    \"Content-Type\": `application/json`,\r\n    \"X-AUTH-TOKEN\": getCookie(\"accessToken\"),\r\n    // \"REFRESH-TOKEN\": getCookie(\"refreshToken\"),\r\n  },\r\n});\r\n\r\ncustomAxios.interceptors.request.use(silentRefresh(config));\r\ncustomAxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n    if (error.response.status === 401 || error.response.status === 406) {\r\n      window.location.href = \"/error\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\nexport default customAxios;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport MainFeaturedPost from \"./MainFeaturedPost\";\r\nimport FeaturedPost from \"./FeaturedPost\";\r\nimport RankTable from \"../../components/RankTable\";\r\nimport customAxios from \"../../utils/customAxios\";\r\n\r\nconst mainFeaturedPost = {\r\n  title: \"커뮤니티 토이 프로젝트\",\r\n  description: \"Spring, React\",\r\n  image: \"https://source.unsplash.com/random\",\r\n  imageText: \"main image description\",\r\n  // linkText: '자세한 내용 보기',\r\n};\r\n\r\nconst featuredPosts = [\r\n  {\r\n    title: \"Spring\",\r\n    date: \"Backend\",\r\n    description: \"Java의 오픈소스 프레임워크\",\r\n    image: \"https://source.unsplash.com/random\",\r\n    imageLabel: \"Image Text\",\r\n  },\r\n  // {\r\n  //   title: \"JPA\",\r\n  //   date: \"ORM\",\r\n  //   description: \"Java의 ORM 기술\",\r\n  //   image: \"https://source.unsplash.com/random\",\r\n  //   imageLabel: \"Image Text\",\r\n  // },\r\n  // {\r\n  //   title: \"Spring Security\",\r\n  //   date: \"Authentication / Authorization\",\r\n  //   description: \"Spring 하위 프레임워크\",\r\n  //   image: \"https://source.unsplash.com/random\",\r\n  //   imageLabel: \"Image Text\",\r\n  // },\r\n  {\r\n    title: \"JWT\",\r\n    date: \"Token\",\r\n    description: \"Json 형식의 Web Token\",\r\n    image: \"https://source.unsplash.com/random\",\r\n    imageLabel: \"Image Text\",\r\n  },\r\n];\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Commnunity() {\r\n  const [ranks, setRanks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    customAxios\r\n      .get(\"/board/rank\")\r\n      .then((response) => setRanks(response.data.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <MainFeaturedPost post={mainFeaturedPost} />\r\n        <RankTable rows={ranks} />\r\n        <Grid container spacing={4}>\r\n          {featuredPosts.map((post) => (\r\n            <FeaturedPost key={post.title} post={post} />\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { visuallyHidden } from \"@mui/utils\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"title\",\r\n    label: \"제목\",\r\n  },\r\n  {\r\n    id: \"view\",\r\n    label: \"조회 수\",\r\n  },\r\n  // {\r\n  //   id: \"content\",\r\n  //   label: \"내용\",\r\n  // },\r\n  {\r\n    id: \"email\",\r\n    label: \"작성자\",\r\n  },\r\n  {\r\n    id: \"createdDate\",\r\n    label: \"작성일자\",\r\n  },\r\n  // {\r\n  //   id: \"modifiedDate\",\r\n  //   label: \"수정일자\",\r\n  // },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function BoardTable(props) {\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"modifiedDate\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const rows = props.rows;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  // const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      <TableCell padding=\"checkbox\"></TableCell>\r\n                      <TableCell component={Link} to={\"/board/post/\" + row.id}>\r\n                        {row.title.substring(0, 15)}\r\n                      </TableCell>\r\n                      {/* <TableCell>{row.content.substring(0, 10)}</TableCell> */}\r\n                      <TableCell>{row.view}</TableCell>\r\n                      <TableCell>{row.email}</TableCell>\r\n                      <TableCell>{row.createdDate}</TableCell>\r\n                      {/* <TableCell>{row.modifiedDate}</TableCell> */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 50, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport BoardTable from \"../../components/BoardTable\";\r\nimport customAxios from \"../../utils/customAxios\";\r\n\r\nconst theme = createTheme();\r\n\r\nfunction Board() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    customAxios\r\n      .get(\"/board\")\r\n      .then((response) => setItems(response.data.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <BoardTable rows={items}></BoardTable>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { visuallyHidden } from \"@mui/utils\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"email\",\r\n    label: \"이메일\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function MemberTable(props) {\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\r\n  const rows = props.rows;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n) => n.name);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\"></TableCell>\r\n                      {/* <TableCell>{row.id}</TableCell> */}\r\n                      <TableCell>{row.email}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 50, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport MemberTable from \"../../components/MemberTable\";\r\nimport customAxios from \"../../utils/customAxios\";\r\n\r\nconst theme = createTheme();\r\n\r\nfunction Member() {\r\n  const [members, setMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    customAxios\r\n      .get(\"/member\")\r\n      .then((response) => setMembers(response.data.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <MemberTable rows={members}></MemberTable>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Member;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\nfunction stringToColor(string) {\r\n  let hash = 0;\r\n  let i;\r\n\r\n  for (i = 0; i < string.length; i += 1) {\r\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  let color = \"#\";\r\n  for (i = 0; i < 3; i += 1) {\r\n    const value = (hash >> (i * 8)) & 0xff;\r\n    color += `00${value.toString(16)}`.slice(-2);\r\n  }\r\n\r\n  return color;\r\n}\r\n\r\nfunction stringAvatar(name, width, height) {\r\n  return {\r\n    sx: {\r\n      bgcolor: stringToColor(name),\r\n\r\n      width: width,\r\n      height: height,\r\n    },\r\n    children: `${name.split(\" \")[0][0]}`,\r\n  };\r\n}\r\n\r\nexport default function LetterAvatars(props) {\r\n  return <Avatar {...stringAvatar(props.email, props.width, props.height)} />;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LetterAvatars from \"../../components/LetterAvater\";\r\nimport { Button } from \"@mui/material\";\r\nimport customAxios from \"../../utils/customAxios\";\r\n\r\nconst theme = createTheme();\r\n\r\nfunction Profile() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    customAxios\r\n      .get(\"/member/profile\")\r\n      .then((response) => setItems(response.data.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {items.email && <LetterAvatars email={items.email} />}\r\n          <p>이메일 : {items.email}</p>\r\n          <p>권한 : {items.role}</p>\r\n          <Button\r\n            href=\"/profile/post\"\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            sx={{ m: 5 }}\r\n          >\r\n            내가 작성한 글\r\n          </Button>\r\n\r\n          <Button href=\"/profile/comment\" variant=\"outlined\" size=\"large\">\r\n            내가 작성한 댓글\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import { atom } from \"recoil\";\r\nimport { recoilPersist } from \"recoil-persist\";\r\n\r\nconst { persistAtom } = recoilPersist();\r\n\r\nexport const LoginState = atom({\r\n  key: \"LoginState\",\r\n  default: false,\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const LoginUser = atom({\r\n  key: \"LoginUser\",\r\n  default: \"\",\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { LoginState, LoginUser } from \"../../states/LoginState\";\r\nimport customAxios from \"../../utils/customAxios\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignIn() {\r\n  const navigate = useNavigate();\r\n  const [isLogin, setIsLogin] = useRecoilState(LoginState);\r\n  const [loginUser, setLoginUser] = useRecoilState(LoginUser);\r\n  const [errorMsg, setErrorMsg] = React.useState(null);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    const memberDto = {\r\n      email: data.get(\"email\"),\r\n      password: data.get(\"password\"),\r\n    };\r\n    customAxios\r\n      .post(\"/member/login\", JSON.stringify(memberDto), {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.success);\r\n        if (response.data.success === true) {\r\n          console.log(\"YAS\");\r\n        }\r\n        setIsLogin(true);\r\n        setLoginUser(data.get(\"email\"));\r\n        navigate(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        setErrorMsg(error.response.data.error.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography>로그인</Typography>\r\n          <Typography color=\"#9e9e9e\">hoon@gmail.com, password</Typography>\r\n          <Typography color=\"#9e9e9e\">tom@gmail.com, password</Typography>\r\n          <Typography color=\"#9e9e9e\">david@gmail.com, password</Typography>\r\n\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            sx={{ mt: 1 }}\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"이메일 주소\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"비밀번호\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            {errorMsg && <h3 style={{ color: \"red\" }}>{errorMsg}</h3>}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"회원가입\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport customAxios from \"../../utils/customAxios\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignUp() {\r\n  const navigate = useNavigate();\r\n  const [errorMsg, setErrorMsg] = React.useState(null);\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    const memberDto = {\r\n      email: data.get(\"email\"),\r\n      password: data.get(\"password\"),\r\n    };\r\n\r\n    customAxios\r\n      .post(\"/member/signup\", JSON.stringify(memberDto))\r\n      .then((response) => {\r\n        navigate(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        setErrorMsg(error.response.data.error.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            회원가입\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"이메일 주소\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"비밀번호\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {errorMsg && <h3 style={{ color: \"red\" }}>{errorMsg}</h3>}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              완료\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/signin\" variant=\"body2\">\r\n                  로그인\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 5 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Link from \"@mui/material/Link\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport SourceIcon from \"@mui/icons-material/Source\";\r\nimport { removeCookie } from \"../../utils/cookie\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { LoginState, LoginUser } from \"../../states/LoginState\";\r\nimport LetterAvatars from \"../../components/LetterAvater\";\r\nimport { Avatar } from \"@mui/material\";\r\n\r\nfunction Header(props) {\r\n  const title = \"Hoon\";\r\n  const sections = [\r\n    { title: \"회원 목록\", url: \"/member\" },\r\n    { title: \"게시판\", url: \"/board\" },\r\n    { title: \"게시글 작성\", url: \"/board/post\" },\r\n  ];\r\n\r\n  const [isLogin, setIsLogin] = useRecoilState(LoginState);\r\n  const [loginUser, setLoginUser] = useRecoilState(LoginUser);\r\n\r\n  const handleLogOut = (event) => {\r\n    event.preventDefault();\r\n    removeCookie(\"accessToken\");\r\n    removeCookie(\"refreshToken\");\r\n    setIsLogin(false);\r\n    setLoginUser(\"\");\r\n    document.location.replace(\"/\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Toolbar\r\n        sx={{\r\n          borderBottom: 1,\r\n          borderColor: \"divider\",\r\n        }}\r\n      >\r\n        <GitHubIcon />\r\n        <Link href=\"https://github.com/myunghoon96\" size=\"small\">\r\n          GitHub\r\n        </Link>\r\n        <SourceIcon sx={{ ml: 1 }} />\r\n        <Link\r\n          href=\"https://github.com/myunghoon96/community_spring_react\"\r\n          size=\"small\"\r\n        >\r\n          Code\r\n        </Link>\r\n        <Typography\r\n          component=\"h2\"\r\n          variant=\"h5\"\r\n          color=\"inherit\"\r\n          align=\"center\"\r\n          sx={{ flex: 1, ml: 1 }}\r\n          href=\"/\"\r\n        >\r\n          <Link href=\"/\" underline=\"always\">\r\n            {title}\r\n          </Link>\r\n        </Typography>\r\n\r\n        {isLogin && (\r\n          <>\r\n            <LetterAvatars email={loginUser} />\r\n            <Button\r\n              onClick={handleLogOut}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ ml: 1 }}\r\n            >\r\n              로그아웃\r\n            </Button>\r\n            <Button\r\n              href=\"/profile\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ ml: 1 }}\r\n            >\r\n              내정보\r\n            </Button>\r\n          </>\r\n        )}\r\n        {!isLogin && (\r\n          <>\r\n            <Avatar />\r\n            <Button\r\n              href=\"/signin\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ ml: 1 }}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Button\r\n              href=\"/signup\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ ml: 1 }}\r\n            >\r\n              회원가입\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n      <Toolbar\r\n        component=\"nav\"\r\n        variant=\"dense\"\r\n        sx={{ justifyContent: \"space-between\", overflowX: \"auto\" }}\r\n      >\r\n        {sections.map((section) => (\r\n          <Link\r\n            color=\"inherit\"\r\n            noWrap\r\n            key={section.title}\r\n            variant=\"body2\"\r\n            href={section.url}\r\n            sx={{ p: 1, flexShrink: 0 }}\r\n          >\r\n            {section.title}\r\n          </Link>\r\n        ))}\r\n      </Toolbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  sections: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      url: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  // ).isRequired,\r\n\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport PostAddIcon from \"@mui/icons-material/PostAdd\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport customAxios from \"../../utils/customAxios\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Post() {\r\n  const navigate = useNavigate();\r\n\r\n  const [errorMsg, setErrorMsg] = React.useState(null);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    const itemDto = { title: data.get(\"title\"), content: data.get(\"content\") };\r\n    customAxios\r\n      .post(\"/board\", JSON.stringify(itemDto))\r\n      .then((response) => {\r\n        navigate(\"/board/post/\" + response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        setErrorMsg(error.response.data.error.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"lg\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1 }}>\r\n            <PostAddIcon />\r\n          </Avatar>\r\n\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            sx={{ mt: 1 }}\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"title\"\r\n              label=\"제목\"\r\n              name=\"title\"\r\n              // autoComplete=\"title\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"content\"\r\n              label=\"내용\"\r\n              type=\"content\"\r\n              id=\"content\"\r\n              multiline\r\n              rows={10}\r\n              // defaultValue=\"Default Value\"\r\n              // autoComplete=\"current-content\"\r\n            />\r\n            {errorMsg && <h3 style={{ color: \"red\" }}>{errorMsg}</h3>}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              제출\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nexport function CommentTable(props) {\r\n  const rows = props.rows;\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n        <TableContainer>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.content}\r\n                  </TableCell>\r\n                  {row[\"member\"] && (\r\n                    <TableCell align=\"right\">{row[\"member\"].email}</TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function CommentPostTable(props) {\r\n  const rows = props.rows;\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n        <TableContainer>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>댓글</TableCell>\r\n                <TableCell align=\"right\">게시글</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.content}\r\n                  </TableCell>\r\n                  {row[\"board\"] && (\r\n                    <TableCell\r\n                      align=\"right\"\r\n                      component=\"a\"\r\n                      href={\"/board/post/\" + row[\"board\"].id}\r\n                    >\r\n                      {row[\"board\"].title}\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DescriptionIcon from \"@mui/icons-material/Description\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { CommentTable } from \"../../components/CommentTable\";\r\nimport customAxios from \"../../utils/customAxios\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function PostDetail() {\r\n  const [items, setItems] = useState([]);\r\n  const [inputComment, setInputComment] = useState(\"\");\r\n  const { postId } = useParams();\r\n\r\n  const [errorMsg, setErrorMsg] = React.useState(null);\r\n  const [commentErrorMsg, setCommentErrorMsg] = React.useState(null);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    customAxios\r\n      .get(\"/board/\" + postId)\r\n      .then((response) => {\r\n        setItems(response.data.data);\r\n        getCommentList();\r\n      })\r\n      .catch((error) => {\r\n        setErrorMsg(error.response.data.error.msg);\r\n      });\r\n  }, []);\r\n\r\n  const getCommentList = () => {\r\n    customAxios\r\n      .get(\"/comment/board/\" + postId)\r\n      .then((response) => {\r\n        setComments(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        setCommentErrorMsg(error.response.data.error.msg);\r\n      });\r\n  };\r\n\r\n  const handleCommentSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    const commentDto = { content: data.get(\"comment\") };\r\n\r\n    customAxios\r\n      .post(\"/comment/board/\" + postId, JSON.stringify(commentDto))\r\n      .then((response) => {\r\n        getCommentList();\r\n        setInputComment(\"\");\r\n        setCommentErrorMsg(null);\r\n      })\r\n      .catch((error) => {\r\n        setCommentErrorMsg(error.response.data.error.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container maxWidth=\"lg\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1 }}>\r\n            <DescriptionIcon />\r\n          </Avatar>\r\n\r\n          <Box sx={{ width: \"100%\" }}>\r\n            {items && items.view >= 0 && (\r\n              <TextField\r\n                // fullWidth\r\n                sx={{ width: \"25%\" }}\r\n                margin=\"normal\"\r\n                id=\"view\"\r\n                label=\"조회수\"\r\n                value={items.view || 0}\r\n              />\r\n            )}\r\n            {items && items.email && (\r\n              <TextField\r\n                // fullWidth\r\n                sx={{ width: \"25%\" }}\r\n                margin=\"normal\"\r\n                id=\"email\"\r\n                label=\"작성자\"\r\n                value={items.email || \"\"}\r\n              />\r\n            )}\r\n            <TextField\r\n              // fullWidth\r\n              sx={{ width: \"25%\" }}\r\n              margin=\"normal\"\r\n              id=\"createdDate\"\r\n              label=\"작성일\"\r\n              value={items.createdDate || \"\"}\r\n            />\r\n            <TextField\r\n              // fullWidth\r\n              sx={{ width: \"25%\" }}\r\n              margin=\"normal\"\r\n              id=\"modifiedDate\"\r\n              label=\"수정일\"\r\n              value={items.modifiedDate || \"\"}\r\n            />\r\n          </Box>\r\n\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"title\"\r\n            label=\"제목\"\r\n            type=\"title\"\r\n            id=\"title\"\r\n            multiline\r\n            value={items.title || \"\"}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"content\"\r\n            label=\"내용\"\r\n            type=\"content\"\r\n            id=\"content\"\r\n            multiline\r\n            rows={10}\r\n            value={items.content || \"\"}\r\n          />\r\n          {errorMsg && <h3 style={{ color: \"red\" }}>{errorMsg}</h3>}\r\n\r\n          <Divider />\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleCommentSubmit}\r\n            noValidate\r\n            sx={{ mt: 1, width: \"100%\" }}\r\n          >\r\n            <TextField\r\n              sx={{ width: \"85%\" }}\r\n              margin=\"normal\"\r\n              id=\"comment\"\r\n              label=\"새 댓글\"\r\n              name=\"comment\"\r\n              value={inputComment}\r\n              onChange={(e) => {\r\n                setInputComment(e.target.value);\r\n              }}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              // fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, width: \"15%\" }}\r\n            >\r\n              댓글 작성\r\n            </Button>\r\n            {commentErrorMsg && (\r\n              <h3 style={{ color: \"red\" }}>{commentErrorMsg}</h3>\r\n            )}\r\n          </Box>\r\n          <CommentTable rows={comments} />\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\r\nimport { LoginState, LoginUser } from \"../states/LoginState\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { removeCookie } from \"../utils/cookie\";\r\n\r\nconst theme = createTheme();\r\n\r\nfunction Error() {\r\n  const [isLogin, setIsLogin] = useRecoilState(LoginState);\r\n  const [loginUser, setLoginUser] = useRecoilState(LoginUser);\r\n  removeCookie(\"accessToken\");\r\n  removeCookie(\"refreshToken\");\r\n  setIsLogin(false);\r\n  setLoginUser(\"\");\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <ErrorOutlineIcon color=\"primary\" sx={{ fontSize: 250 }} />\r\n\r\n          <h1>에러 페이지</h1>\r\n          <h3>Access Token, Refresh Token이 유효하지 않습니다.</h3>\r\n          <h3>다시 로그인 부탁드립니다.</h3>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport BoardTable from \"../../components/BoardTable\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { LoginUser } from \"../../states/LoginState\";\r\nimport customAxios from \"../../utils/customAxios\";\r\n\r\nconst theme = createTheme();\r\n\r\nfunction ProfileBoard() {\r\n  const [items, setItems] = useState([]);\r\n  const [loginUser, setLoginUser] = useRecoilState(LoginUser);\r\n\r\n  useEffect(() => {\r\n    customAxios\r\n      .get(\"/board/profile\")\r\n      .then((response) => setItems(response.data.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <BoardTable rows={items}></BoardTable>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ProfileBoard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getCookie } from \"../../utils/cookie\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { CommentPostTable } from \"../../components/CommentTable\";\r\nimport customAxios from \"../../utils/customAxios\";\r\n\r\nconst theme = createTheme();\r\n\r\nfunction ProfileComment() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    customAxios\r\n      .get(\"/comment/profile\", {\r\n        headers: { \"X-AUTH-TOKEN\": `${getCookie(\"accessToken\")}` },\r\n      })\r\n      .then((response) => setItems(response.data.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <CommentPostTable rows={items}></CommentPostTable>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ProfileComment;\r\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Commnunity from \"./pages/community/Commnunity\";\nimport Board from \"./pages/board/Board\";\nimport Member from \"./pages/member/Member\";\nimport Profile from \"./pages/member/Profile\";\nimport SignIn from \"./pages/auth/SignIn\";\nimport SignUp from \"./pages/auth/SignUp\";\nimport Container from \"@mui/material/Container\";\nimport Header from \"./pages/community/Header\";\nimport Post from \"./pages/board/Post\";\nimport PostDetail from \"./pages/board/PostDetail\";\nimport Error from \"./pages/Error\";\nimport ProfileBoard from \"./pages/member/ProfileBoard\";\nimport ProfileComment from \"./pages/member/ProfileComment\";\nimport { Navigate } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { LoginState } from \"./states/LoginState\";\n\nfunction App() {\n  const [isLogin, setIsLogin] = useRecoilState(LoginState);\n  const ProtectedRoute = ({ children }) => {\n    if (!isLogin) {\n      return <Navigate to=\"/signin\" replace />;\n    }\n    return children;\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Header />\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Commnunity />} />\n          <Route path=\"/member\" element={<Member />} />\n          <Route path=\"/signup\" element={<SignUp />} />\n          <Route path=\"/signin\" element={<SignIn />} />\n          <Route path=\"/error\" element={<Error />} />\n\n          <Route\n            path=\"/board\"\n            element={\n              <ProtectedRoute>\n                <Board />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/board/post\"\n            element={\n              <ProtectedRoute>\n                <Post />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/board/post/:postId\"\n            element={\n              <ProtectedRoute>\n                <PostDetail />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/profile\"\n            element={\n              <ProtectedRoute>\n                <Profile />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/profile/post\"\n            element={\n              <ProtectedRoute>\n                <ProfileBoard />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/profile/comment\"\n            element={\n              <ProtectedRoute>\n                <ProfileComment />\n              </ProtectedRoute>\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {CookiesProvider} from 'react-cookie';\nimport { RecoilRoot } from 'recoil';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <RecoilRoot>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </RecoilRoot>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}